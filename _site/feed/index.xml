<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Ted's blog'</title>
 <link href="http://tedhagos.com/feed/" rel="self"/>
 <link href="http://tedhagos.com/"/>
 <updated>2013-07-05T00:46:26+08:00</updated>
 <id>http://tedhagos.com/</id>
 <author>
   <name>Ted Hagos</name>
   <email>ted@thelogbox.com</email>
 </author>

 
 <entry>
   <title>Two Factor Authentication for Web Apps</title>
   <link href="http://tedhagos.com /two-factor-auth-using-sms"/>
   <updated>2013-07-04T00:00:00+08:00</updated>
   <id>http://tedhagos.com /two-factor-auth-using-sms</id>
   <content type="html">&lt;p&gt;One way to achieve a two factor authentication is to couple a simple website login with an SMS  One Time PIN. The username/password (what the user know) is the first layer of security challenge. The web application generates a random number which is valid only for current browser session, sends the generated random number via a third party SMS gateway and asks the user to input the OTP (One Time Pin) in order to satisfy the security challenge.  The OTP will serve as the “what you have” part for our 2 factor authentication.&lt;/p&gt;

&lt;p&gt;This is a poor man's approach to Two Factor authentication. If you are strapped for cash and cannot afford the fancy gadgets that has random number generators (the one that changes every five minutes), then this solution might be good enough in the meantime.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2factor-auth-sms.png&quot; /&gt;&lt;/p&gt;

&lt;div id=&quot;cap&quot;&gt;
  Fig 1: Sequence/Workflow of Two Factor Auth
&lt;/div&gt;


&lt;p&gt;It is best (and recommended) to seek third party integration to handle the SMS messaging aspect. A fully functioning SMS gateway is non-trivial to build and develop from scratch. There are lots of SMS gateway providers {TODO: Compile some options for third party SMS gateway providers}&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;THINGS TO CONSIDER&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Session Management&lt;/strong&gt; will not be very simple. You will need to account the coupling of a randomly generated number (a one time pin, like what most banking sites use). Associate it with the current browser session. The basic idea is to expire that PIN after the browser session has ended. You will need to carefully think about simpistic state management now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Messaging component&lt;/strong&gt; will have to be written. Surely you won't write the SMS-specific codes intermingled with your primary business logic? would you? Depending on what SMS gateway solution you will choose, this messaging component maybe as simple as making a RESTful call or integrating a complicated client-side library. You must consider complexity of integration when choosing a third party solution for th SMS gateway.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost&lt;/strong&gt; of sending or receiving 1 SMS message. Some services are free, most are not. You need to do some cost analysis here.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;HOME GROWN SMS SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are quite handy on Linux, you can build an SMS gateway of your own. You can try to use &lt;a href=&quot;http://kannel.org&quot;&gt;kannel&lt;/a&gt; or concoct your own using &lt;a href=&quot;http://thelogbox.com/send-receive-sms-messages-usb-modem-linux/&quot;&gt;gnokii, smsd and a USB modem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the hardcore, if you can still remember your RS-232 programming and you can lay your hands on an old copy of the Hayes AT&amp;amp;T GSM modem commands, you can go down that route too.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;ANOTHER SOLUTION FOR 2 FACTOR AUTH&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use the MAC address of the device. That will satisfy the “what you have” requirement. The device itself is the security token. This is simpler and more transparent to the user because of the reduced steps on the workflow.&lt;/p&gt;

&lt;p&gt;This cannot be easily or eleagantly done if the user is on a Desktop machine and accessing the application via a browser. There is no way (yet) to get the MAC address of the machine without resorting to trickeries like ActiveX. The MAC information is not on the TCP packet, it is on the Ether. The Ether information does not make it to the HTTP headers (which is what you have on the server side of the web app)&lt;/p&gt;

&lt;p&gt;And so, the MAC solution might be a better fit for mobile devices. I would suspect that a standard API exists for extracting MAC on IOS or Android.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on API Projects</title>
   <link href="http://tedhagos.com /api-projects"/>
   <updated>2013-01-31T00:00:00+08:00</updated>
   <id>http://tedhagos.com /api-projects</id>
   <content type="html">&lt;p&gt;You will underestimate the efforts on your first API project. Even if you have done many an estimations before and you have participated in many a projects, if none of them were API development, you will be painfully reminded that &lt;strong&gt;there is always a first time for everything&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;API projects are not exactly the same as a web app, or mobile app or a desktop app. They should not be estimated as such. You will spend more effort on development and unit testing on API projects.&lt;/p&gt;

&lt;p&gt;Once you have built the API, you will spend time testing it. The way to test it is to build an application that will use the API. &amp;mdash; shouldn't you actually build a unit test also for that app that will use your API? If you won't, how will you get an insight on how the APIs will be used by others. You need to get into the heads of your users if the API is to be robust.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Of fixed Deadlines and Moving Scopes</title>
   <link href="http://tedhagos.com /fixed-deadlines-moving-scope"/>
   <updated>2013-01-30T00:00:00+08:00</updated>
   <id>http://tedhagos.com /fixed-deadlines-moving-scope</id>
   <content type="html">&lt;p&gt;A common tale on software projects &amp;mdash; there is hard stop somewhere down the line, a fixed date when to ship the software out of the door, but the scope is still moving.&lt;/p&gt;

&lt;p&gt;In a perfect world, before a single line of code is ever written, everybody involved in software development (including the client) has a good understanding of what needs to be done, how to get there, how much sweat will it take and for how long everybody sweats &amp;mdash; in a perfect world.&lt;/p&gt;

&lt;p&gt;It isn't perfect. It isn't smooth. It isn't always peaceful. It isn't always cool. There are lots of people involved, lots of people have stakes, not everybody is aware of what's going on, and not everybody is on time. While Agile methods have taught a lot of people not to do things serially and and not to put things in the critical path, the software development phase is not the be-all and end-all of projects. There are other people involved in the value chain of projects, and some (a lot, actually) are way up on this chain &amp;mdash; these are people waiting to pay for the software (more often than not, they have already paid for the software), people who promised some other people a delivery date for the software, people who manage some people who promise some other people a delivery date for the software, so on and so forth. Like it or not, they can exert a lot of influence on when that software should be out of your door.&lt;/p&gt;

&lt;p&gt;If you have been doing this long enough, you have an overdeveloped thick skin for the vicissitudes of the SDLC (Software Development Life Cycle). If you are new at this, prepare for temper swings (yours and other people), but keep your cool. Flaring up, yelling matches and snide emails are not useful &amp;mdash; contemplation is.&lt;/p&gt;

&lt;p&gt;There are 3 things you need to be acutely aware of in a project. First, how much work is there (features), how many people do you have to work on them (resource) and how much time do you have (deadline) &amp;mdash; that's the basics. If one of these three things move, you need to start taking notes of how it will impact the other two &amp;mdash; and there is always impact.&lt;/p&gt;

&lt;p&gt;If the scope of the project keeps moving, either the deadline or the resources will stretch. Stretching the resources can mean either extending their hours (beyond 8) or adding warm bodies to the project. Neither has desirable effects. When you stretch people's working hours, their focus is thinly spread, the brain needs a healthy dose of sleep. People who are tired makes more mistakes. You might be able to ship that software after all, but it might not behave like you expect it to. Adding warm bodies is  a pipe dream also, at least on short projects &amp;mdash; the ones you measure in months, not in multi-years. You are throwing new comers to the deep-end, they will need to familiarise and absorb what your other guys have been working on in the past couple of months. They will ask questions and clarify things &amp;mdash; you will spend time with them; and its time you don't have. Familiarise your self with the law of diminishing returns.&lt;/p&gt;

&lt;p&gt;So, the only thing left to manage is the deadline &amp;mdash; and this is a very sensitive area to a lot of people, this is the one that causes tempers to flare. When tempers flare, just check your own, there is nothing you can do with other people's temper and demeanour. A discussion on moving the deadline will always be a difficult one; accept it, prepare for it, discuss it calmly and intelligently. Don't get sucked into the blame-storming frenzy that ensues. Focus on problem solving.&lt;/p&gt;

&lt;p&gt;The tricky part about running out of time is that it's not always easy to tell when you are. Projects are never late one week or one month. Projects are late one day at a time, it won't seem so bad on the first day you find out you are behind. It might not seem so bad even during the second day &amp;mdash; and there is the rub. How do you tell when it's bad enough? How can you be certain that 4 more hours of delay will negatively impact your team's ability to deliver the software, as agreed and as expected? Where is the point when recovery and salvage are no longer possibilities? Sadly, it's an acquired skill, every project is different &amp;mdash; some or all of the people in your team might be different, a different client, slightly different set of features, different version of libraries you are using  etc. &amp;mdash; You just need to do it long enough and plenty enough to get better at it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>480 minutes of focus</title>
   <link href="http://tedhagos.com /480-minutes-of-focus"/>
   <updated>2013-01-15T00:00:00+08:00</updated>
   <id>http://tedhagos.com /480-minutes-of-focus</id>
   <content type="html">&lt;p&gt;That's 8 hours. It's a stretch to increase it, no matter how badly you want to.&lt;/p&gt;

&lt;p&gt;Every morning you've got 24 potential-filled hours, sounds like a lot, but after;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;waiting on elevators (.25 hours, cumulatively)&lt;/li&gt;
&lt;li&gt;getting to work (1 hour)&lt;/li&gt;
&lt;li&gt;(actually) working (8 hours)&lt;/li&gt;
&lt;li&gt;light social activity, water cooler talk (.25 hours)&lt;/li&gt;
&lt;li&gt;lunch (1 hour)&lt;/li&gt;
&lt;li&gt;getting home (1 hour)&lt;/li&gt;
&lt;li&gt;dinner (1 hour)&lt;/li&gt;
&lt;li&gt;hygiene and other physical necessities (1.5 hours)&lt;/li&gt;
&lt;li&gt;get appraised on current events (1 hour)&lt;/li&gt;
&lt;li&gt;sleep (8 hours)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;the day is finished.&lt;/p&gt;

&lt;p&gt;A non-trivial subject could require 120 minutes of blocked time, these are the kinds of task that (hopefully) will have big pay offs. Hopefully again, you could get at least 2 of these big chunks each day &amp;mdash; but that is constantly threatened by telephone rings, people walking into your workspace, noisy cubicle neighbors and many others. So, do you really need to get interrupted by Twitter, Facebook and that annoying sound your email app makes when something arrives.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Brain's Playbook</title>
   <link href="http://tedhagos.com /default-behavior"/>
   <updated>2013-01-08T00:00:00+08:00</updated>
   <id>http://tedhagos.com /default-behavior</id>
   <content type="html">&lt;p&gt;I know what I have to do, I've written (and rewritten) them down in the notebook, in the goal papers; yet I don't want to do them. There's a tug-of-war happening inside and the lazy guys seems to be winning.&lt;/p&gt;

&lt;p&gt;My primitive brain is taking over, it's telling me to do nothing, conserve energy (that means sleep) and eat (fast and plenty)&amp;mdash;I know that if I take my eyes off the focus for the day, the lazy guy is gonna win. I have to shake this monkey off my back, I've got lots of things to do today&amp;mdash;maybe a 15 minute cardio should perk me up again; or coffee, that can do the trick too; just don't put sugar in it because the lazy guy loves sugar.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The First Two Hours</title>
   <link href="http://tedhagos.com /two-hours"/>
   <updated>2013-01-07T00:00:00+08:00</updated>
   <id>http://tedhagos.com /two-hours</id>
   <content type="html">&lt;p&gt;Wake up 2 hours earlier than your usual. After the morning rituals, coffee etc, don't turn on the computer, don't check your email, don't check messages on your phone lest your mind will wander around, will fleet from thought to thought and
get filled with &lt;em&gt;little things&lt;/em&gt; &amp;mdash; remember what Stephen Covey said on &lt;em&gt;First things First&lt;/em&gt;, rocks first, then stones, then pebbles then sand. Look at the rocks first, attend to the rocks first. Stay disconnected for the first two hours. Use the time to;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Look at your todo list for the week&lt;/li&gt;
&lt;li&gt;Look at your todo list yesterday, if some items fell in the crack, add them to the list for the day. Can't steal time&lt;/li&gt;
&lt;li&gt;Write (rewrite) the todo list for the day. See which ones in the list can be done in 2 hours, but can potentially contribute the most to results of the day (80/20). Be brutal about the selection. Those task that will not make the cut are probably less important anyway&amp;mdash;either delay them, queue them, delete them altogether.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The first two hours is important, it sets the tone of the day. If you don't set the tone, the hours will pass by and you will wander aimlessly; sure you will respond to emails, answer your phone, engage in conversations&amp;mdash;but those are probably the 80% of your activity that gives rise to only 20% of your results (maybe even a lot less than 20%)&amp;mdash;do the important stuff first; the important ones for you, that is.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>It's (not) Just a Task List</title>
   <link href="http://tedhagos.com /the-task-list"/>
   <updated>2012-12-28T00:00:00+08:00</updated>
   <id>http://tedhagos.com /the-task-list</id>
   <content type="html">&lt;p&gt;As you move through your task list for the day, it doesn’t hurt to include what artefact will it produce. What do you expect to get out of it. Sometimes a task doesn’t have an artefact, and that’s fine—but more often than not, a task does have an artefact, even if it is just a single page containing your notes, and how you clarified your thoughts on it.&lt;/p&gt;

&lt;p&gt;It is important to ask what is the victory condition for the task, when do you stop working on it. If the victory condition is unclear, then maybe the task is bigger than what you originally thought it was—tactical or long term goal, perhaps.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Long Fuse</title>
   <link href="http://tedhagos.com /long-fuse"/>
   <updated>2012-12-27T00:00:00+08:00</updated>
   <id>http://tedhagos.com /long-fuse</id>
   <content type="html">&lt;ol&gt;
&lt;li&gt;a device in a bomb that controls the timing of an explosion&lt;/li&gt;
&lt;li&gt;a book by Dr. Eric Haseltine (Long Fuse, Big Bang …)&lt;/li&gt;
&lt;li&gt;long term goals. not the same as task list items, but each item on the task list should keep the spark going. It's the big picture, the balls you don't drop. It's your marshmallow test. They will not be immediately satisfied. It's not the &lt;em&gt;here and now&lt;/em&gt;, so you need to be very patient and very cool about it&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;On clients and projects&lt;/h1&gt;

&lt;p&gt;Getting jobs at freelancer, elance odesk or something similar is short fuse. A quick buck. Writing a 500 word article for a measley sum is also short fuse. On the other hand, working on specific expertise, building authoritative credentials on specific subjects, building a brand is long fuse. Working on long fuse projects is disheartening, especially if you are the type that needs constant revalidation and assurances of your efforts. It is easy to dismiss long fuses as risky and fruitless exercise&lt;/p&gt;

&lt;p&gt;Worthwhile results have very long gestation periods. It is hard to believe the claims of success stories that an idea came to them while showering. It is more believable that those ideas came to them a long time ago. Marinading at the back of their minds for months, years, maybe decades &amp;mdash; then maybe, just maybe, the last piece of the puzzle came to them one day while they were showering. That I can believe.&lt;/p&gt;

&lt;p&gt;Back on the subject of client acquisition vs. project acquisition, having a litany of projects on the portfolio might seem the way to go for a startup effort. I will probably submit that it is one way to bootrap a brand. Having a thousand entries of short projects on the portfolio after 5 years does raise some flags. It gives the impression that the projects you have worked on are low-hanging fruits, can be done in lickety-split and lacks depth. Depth &amp;mdash; 10 miles wide, 2 inch deep, as the saying goes.&lt;/p&gt;

&lt;h1&gt;On building a technical career&lt;/h1&gt;

&lt;p&gt;Some CVs are 10+ page long and peppered with a dizzying litany of projects &amp;mdash; I have personally seen examples of these CVs &amp;mdash; no, they are not senior developes. I have seen people who had 4 years of experience and have listed more than 50 projects on the CV, spanning 5 or more companies. The details of reasons for the short stints are only mildly interesting. Not worth the discussion. The pattern which explains the short length of stay coupled with the incredible array of projects is more interesting.&lt;/p&gt;

&lt;p&gt;To some, working on a ground up project is a badge of honor. It is. The same cannot be said for working on a startup project then leaving for another project or another company as soon as the project goes on post-production phase. Post-production or support work is ripe with learning opportunities. It is harder and more difficult than the development phase. Time allocation for tasks  are compressed. You don't have a two-week sprint to solve a problem, you have days if not hours. If you made good decisions upstream, then the project has a fighting chance of surviving real-world test. If you did not make excellent decisions, you are in for a bag of hurt. It will be the good kind of hurt. You have to get past bruised egos to appreciate the lessons, but you need to stay with the project past the go-live date to see the lessons.&lt;/p&gt;

&lt;p&gt;Wham-bam short projects may get you a thick CV. It may get you some referrals, to the next short gig. It is one way of building a career. It is however, short-fuse. Would you really hire a tech lead or an architect because he has done a gazillion projects? No. If he (ever) gets hired, it is not because of the number of projects in his belt, but because of how deep he has dived into those projects.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Low Grade Stress</title>
   <link href="http://tedhagos.com /holiday-blues-low-grade-stress"/>
   <updated>2012-12-26T00:00:00+08:00</updated>
   <id>http://tedhagos.com /holiday-blues-low-grade-stress</id>
   <content type="html">&lt;p&gt;The sinking feeling you are getting is most likely because you have a lot of thoughts in your mind. Specifically thoughts that make you feel guilty that you haven’t done enough and you wasted way too much time watching movies, checking on your website and scanning through emails&amp;mdash;holiday breaks can do that to you.&lt;/p&gt;

&lt;p&gt;After a movie marathon, couple of packs of cigarettes, lots of caffeine and serial eating, it’s a bit difficult to go back to a centered state of thought. You will fall out of rhythm. This happens from time to time, your mind is playing tricks because your short term memories are not about work, they are about decadence&amp;mdash;and its a tricky business to catch yourself when you are accelerating towards decadence and lethargy. It usually takes a boss or another authority figure to kick you from behind or give you a whack on the back of your head so you can get buttoned up again.&lt;/p&gt;

&lt;p&gt;That sinking feeling is a stressor, it’s low intensity but it lingers. It’s a lot like the flickering light on your work area or the slow march of traffic you go through everyday. Adrenaline is not going to solve it. You cannot simply explode into action, beat it to a pulp or run away from it.&lt;/p&gt;

&lt;p&gt;Luckily, you already wrote down your list of long fuses — you have written them down, haven’t you? — and you keep a journal pretty regularly&amp;mdash;you do keep a journal, don’t you?&amp;mdash;A list of long fuses keeps your eyes on the far horizon and your journal records some minutiae of the tactical challenges you were trying to solve before you drifted into the path of aimless-ness. Get back on those, let your mind get on the groove of your task list. You can’t swallow an elephant, you got to slice it up in bite-sized pieces.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Lazy bones, Lazy mind</title>
   <link href="http://tedhagos.com /whats-keeping-you"/>
   <updated>2012-12-24T00:00:00+08:00</updated>
   <id>http://tedhagos.com /whats-keeping-you</id>
   <content type="html">&lt;p&gt;What exactly is that one thing you are waiting to happen before you do the big things on your list. You’ve already done the Guy Kawasaki advise, M-A-T right? So what’s eating you up. Why are you dragging your feet.&lt;/p&gt;

&lt;p&gt;What conditions are you waiting for. A perfect sunny day wasn’t part of your assumptions, you were gonna do these things regardless — it’s just lethargy isn’t it? or you don’t think you deserve it. You think it’s not  ”you”,  not within your elements — or its’ too deep for you.&lt;/p&gt;

&lt;p&gt;You need to practice more writing. Articulate exactly what are the things that need to happen first, before the big things on your list start happening.&lt;/p&gt;

&lt;p&gt;Big things on your list mostly falls under the category of multi-step problem. You can’t skip the intervening solutions and jump right to the last problem — maybe that is what’s keeping you, because you think you can&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>To the front or to the side?</title>
   <link href="http://tedhagos.com /move-forward-or-sideways"/>
   <updated>2012-12-24T00:00:00+08:00</updated>
   <id>http://tedhagos.com /move-forward-or-sideways</id>
   <content type="html">&lt;p&gt;For most problems, looking for that one right answer is a natural approach to take. Process of elimination is very ingrained and wired deep into our thinking — it’s not a bad way to solve problems. But when you are stomped, the logical approach maybe of limited use. Another way to proceed could be to think sideways, the process of generation. The goal is not to eliminate options, rather to generate them.&lt;/p&gt;

&lt;p&gt;The rub is to know when to move forward and when to move sideways. This is probably why the thinking process is an art form.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Snowballing thoughts</title>
   <link href="http://tedhagos.com /thought-snowball"/>
   <updated>2012-12-23T00:00:00+08:00</updated>
   <id>http://tedhagos.com /thought-snowball</id>
   <content type="html">&lt;p&gt;Try to avoid mental snowballing. This one usually occurs when you are so absorbed into a negative detail. You will begin rehearsing one thought after another in your mind, you might even rehearse conversations that will eventually make you feel agitated.&lt;/p&gt;

&lt;p&gt;Thought rehearsal is good, if it’s a positive thought, if it’s a negative thought, it should be dealt with differently. Out of the 10 (bad) things you think will happen, 1 (or maybe none at all) will happen.  Life is short, time is short&amp;mdash;such a waste to spend it in paranoia&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Copyright and Reprint Info</title>
   <link href="http://tedhagos.com /copyright-reprint-info"/>
   <updated>2012-12-23T00:00:00+08:00</updated>
   <id>http://tedhagos.com /copyright-reprint-info</id>
   <content type="html">&lt;p&gt;All articles and writings appearing on this website is copyright &amp;copy; by Ted Hagos. All Rights Reserved.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linking.&lt;/strong&gt; Link away. That is most welcome. Links are the foundation of the web, so I am all for it, knock yourself out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Electronic and Online reproduction.&lt;/strong&gt; ummm, I'm not entirely sure about this. I still have an idealistic view of intellectual properties and copyright. I think it's just easier for all of us to just use links &amp;mdash; if you do however, really really need to reproduce anything you find in here, just &lt;a href=&quot;mailto:ted@thelogbox.com&quot;&gt;drop me note at ted {at} thelogbox {dot} com&lt;/a&gt;. Let's talk about it&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Slowing down helps</title>
   <link href="http://tedhagos.com /challenges-first-glance"/>
   <updated>2012-12-23T00:00:00+08:00</updated>
   <id>http://tedhagos.com /challenges-first-glance</id>
   <content type="html">&lt;p&gt;Don’t try to take on the challenges at once. Speed of response is not always a priority. Sticky problems always have lots of things underneath them — the ones that you don’t see;  Remember Pareto? 8 parts of the problem is submerged and unseen. You need to uncover them first before you can solve the 2 parts of it which are visible and are in your face.&lt;/p&gt;

&lt;p&gt;This is why you need to always catch your self when you are in an agitated state. Going from thought to speech in 10 seconds is a dangerous thing. Absorb, relax, collect your thoughts, ask the 5 whys, then formulate a response&lt;/p&gt;
</content>
 </entry>
 
 
</feed>