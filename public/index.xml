<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ted&#39;s notes</title>
    <link>http://tedhagos.com/</link>
    <description>Recent content on Ted&#39;s notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright Ted Hagos</copyright>
    <lastBuildDate>Mon, 07 May 2018 13:22:10 +0800</lastBuildDate>
    
	<atom:link href="http://tedhagos.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> Collections</title>
      <link>http://tedhagos.com/posts/working-with-kotlin-collections/</link>
      <pubDate>Mon, 07 May 2018 13:22:10 +0800</pubDate>
      
      <guid>http://tedhagos.com/posts/working-with-kotlin-collections/</guid>
      <description>Why are we bothering Should I go through all the topics in collections What are the collections, by the way, should I describe them in detail Don&amp;rsquo;t write raw loops (the filter and lambdas should actually be able to do the job), why should&amp;rsquo;nt I use raw loops, the syntax is there, why shouldn&amp;rsquo;t I use it — because most of hte time, there&amp;rsquo;s probably a better way of doing it Why do we call it a framework  The questions I should be asking;</description>
    </item>
    
    <item>
      <title>Higher Order Functions</title>
      <link>http://tedhagos.com/posts/kotlin-higher-order-functions/</link>
      <pubDate>Sat, 05 May 2018 09:16:00 +0800</pubDate>
      
      <guid>http://tedhagos.com/posts/kotlin-higher-order-functions/</guid>
      <description>Why the name? are there lower order functions? How is it any different from the usual method I know from Java, C/C++ or Visual Basic What does it mean when they say “first class citizen”, first class functions What do they look like How do they accept functions as parameter and why is this useful How would it return functions? again, why is this useful Do the Kotlin team themselves use higher order functions  What’s with the name The name higher order functions come from the world of Mathematics, in there, a higher order function is also called functional, functional form or functor, and apparently, they take the difference between function and values, a bit more seriously than programming folks.</description>
    </item>
    
    <item>
      <title>Angularjs Quickstart</title>
      <link>http://tedhagos.com/posts/angularjs-quickstart/</link>
      <pubDate>Sun, 31 Dec 2017 20:58:27 +0800</pubDate>
      
      <guid>http://tedhagos.com/posts/angularjs-quickstart/</guid>
      <description>1. Introduction  What&amp;rsquo;s covered What versions Why this tutorial  Why Angular1 (you saved someting in instapaper). Why would you want to use this in 2018?
Package this with
Resources for the book (have it downloadable)
2. Requisite knowledge and background  JS Command line experience Experience setting up a POSIX shell such as Cygwin or MingW, if you are using Windows. It is possible to do all the examples which requires the use of the command line in Windows Powershell, but that is out of the scope of this tutorial.</description>
    </item>
    
    <item>
      <title>Kotlin</title>
      <link>http://tedhagos.com/posts/kotlin-getting-started/</link>
      <pubDate>Sat, 30 Dec 2017 21:07:12 +0800</pubDate>
      
      <guid>http://tedhagos.com/posts/kotlin-getting-started/</guid>
      <description>1. Tooling There are a few ways to get started.
 Explore the online editor at try.kotlinlang.org Get the command line tools at kotlinlang.org/commandline Use an IDE like Eclipse or IntelliJ IDEA, there is a non-paid version of IntelliJ called CE or Community Edition  2. A few characteristics Like Java, its
 compiled, so it goes through the same cycle of writing &amp;gt; compiling &amp;gt; running statically typed, but we don&amp;rsquo;t always have to write the type.</description>
    </item>
    
    <item>
      <title>Linux Cheatsheet</title>
      <link>http://tedhagos.com/posts/linux-cheatsheet/</link>
      <pubDate>Sat, 30 Dec 2017 19:18:23 +0800</pubDate>
      
      <guid>http://tedhagos.com/posts/linux-cheatsheet/</guid>
      <description>Copy pasting clipboard to/from terminal Can be done either via xsel or xclip. Xclip is part of most modern installations, so you it may be there in your installation already. The common usages are:
You copied something in an X window (browser or editor etc), you want to paste the content to the terminal. Unfortunately the terminal doesn&amp;rsquo;t have access to the clipboard. But you can do this on the terminal using</description>
    </item>
    
    <item>
      <title>Vim Setup</title>
      <link>http://tedhagos.com/posts/vim-setup/</link>
      <pubDate>Sat, 30 Dec 2017 18:21:10 +0800</pubDate>
      
      <guid>http://tedhagos.com/posts/vim-setup/</guid>
      <description>Get Vundle
git clone https://github.com/VundleVim/Vundle.vim.git  Create .vimrc in your home folder (~/.vimrc) and add the following entries to it
set rtp+=~/.vim/bundle/vundle/Vundle.vim call vundle#begin() Plugin &#39;gmarik/Vundle.vim&#39; Plugin &#39;MarcWeber/vim-addon-mw-utils&#39; Plugin &#39;Valloric/YouCompleteMe&#39; Plugin &#39;tomtom/tlib_vim&#39; Bundle &#39;snipmate-snippets&#39; Plugin &#39;honza/vim-snippets&#39; Plugin &#39;garbas/vim-snipmate&#39; Plugin &#39;tpope/vim-rails.git&#39; Plugin &#39;tpope/vim-fugitive&#39; Plugin &#39;tpope/vim-surround&#39; Plugin &#39;tpope/vim-sleuth&#39; Plugin &#39;tpope/vim-markdown.git&#39; Plugin &#39;ricardovaleriano/vim-github-theme.git&#39; call vundle#end()  Save the .vimrc file. Close it and execute the following command on a terminal window
vim +PluginInstall +qall  </description>
    </item>
    
    <item>
      <title>Python Exercises</title>
      <link>http://tedhagos.com/posts/python-exercises/</link>
      <pubDate>Tue, 10 May 2016 13:46:41 +0800</pubDate>
      
      <guid>http://tedhagos.com/posts/python-exercises/</guid>
      <description>1. Summing things up Create a module named &amp;ldquo;sums.py&amp;rdquo; with three functions in it. These functions are named as follows
 sum_to(end) sum_of_even(end) sum_of_odd(end)  The module should be loadable from the REPL, sample usage is as follows
&amp;gt;&amp;gt;&amp;gt; import sums &amp;gt;&amp;gt;&amp;gt; sums.sum(100) Sum of numbers from 1 to 100 is 4950 &amp;gt;&amp;gt;&amp;gt; sums.sum_of_even(100) “Your answer here” &amp;gt;&amp;gt;&amp;gt; exer1.sum_of_odd(100) “Your answer here”  You should also be able to run the module as a script, like so</description>
    </item>
    
  </channel>
</rss>